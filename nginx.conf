worker_processes  auto;

events {
    worker_connections 4096;
}

error_log /var/log/nginx/error.log info;

rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application stream {
            live on;
            allow publish all;
            gop_cache on;
            interleave on;

            exec /usr/local/bin/ffmpeg -i rtmp://localhost:1935/stream/$name -vsync 1
                -c:v libx264 -c:a copy -vf "scale=852:-2"  -copyts -start_at_zero -sws_flags lanczos -keyint_min 30 -force_key_frames "expr:gte(t,n_forced*1)" -tune zerolatency -preset veryfast -crf 20 -maxrate 1200k -bufsize 2400k -threads 16 -f flv rtmp://localhost:1935/show/$name_480
                -c:v libx264 -c:a copy -vf "scale=1270:-1" -copyts -start_at_zero -sws_flags lanczos -keyint_min 30 -force_key_frames "expr:gte(t,n_forced*1)" -tune zerolatency -preset veryfast -crf 20 -maxrate 2608k -bufsize 5216k -threads 16 -f flv rtmp://localhost:1935/show/$name_720
                -c copy -f flv rtmp://localhost:1935/show/$name_src 2>>/tmp/ffmpeg.log;
        }

        application show {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 3;
            hls_playlist_length 10;
            hls_path /tmp/hls;
            hls_nested on;

            hls_variant _480 BANDWIDTH=1200000,CODECS="avc1.4d401f,mp4a.40.2",RESOLUTION="480p"; # Medium bitrate, SD resolution
            hls_variant _720 BANDWIDTH=2048000,CODECS="avc1.4d401f,mp4a.40.2",RESOLUTION="720p"; # High bitrate, HD 720p resolution
            hls_variant _src BANDWIDTH=4096000,CODECS="avc1.4d401f,mp4a.40.2",RESOLUTION="1080p"; # Source bitrate, source resolution

            dash on;
            dash_nested on;
            dash_path /tmp/dash;
            dash_fragment 3;
            dash_playlist_length 10;
        }
    }
}

http {
    root /www/static;
    sendfile off;
    tcp_nopush on;
    server_tokens off;
    access_log /var/log/nginx/access.log combined;

    # Uncomment these lines to enable SSL.
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 1d;

    server {
        listen 8080;
        add_header 'Cache-Control' 'no-cache';
        add_header 'Access-Control-Allow-Origin' '*';

        # Uncomment these lines to enable SSL.
        # Update the ssl paths with your own certificate and private key.
            
        # listen ${HTTPS_PORT} ssl;
        # ssl_certificate     /opt/certs/example.com.crt;
        # ssl_certificate_key /opt/certs/example.com.key;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
        }

        location /dash {
            root /tmp;
        }

        location /live {
            flv_live on; #open flv live streaming (subscribe)
            chunked_transfer_encoding  on; #open 'Transfer-Encoding: chunked' response
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /www/static;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }

        location /view/ {
            rewrite ^/view/(.*)? /hls.html break;
        }
    }
}